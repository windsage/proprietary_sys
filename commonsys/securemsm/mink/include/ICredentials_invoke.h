// Copyright (c) 2015, 2021 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
/** @cond */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "ICredentials.h"

#define ICredentials_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##retain(me); \
      } \
      case ICredentials_OP_getPropertyByIndex: { \
        if (k != ObjectCounts_pack(1, 2, 0, 0) || \
          a[0].b.size != 4) { \
          break; \
        } \
        const uint32_t *index_ptr = (const uint32_t*) a[0].b.ptr; \
        void *name_ptr = (void*) a[1].b.ptr; \
        size_t name_len = a[1].b.size / 1; \
        void *value_ptr = (void*) a[2].b.ptr; \
        size_t value_len = a[2].b.size / 1; \
        int32_t r = prefix##getPropertyByIndex(me, *index_ptr, name_ptr, name_len, &name_len, value_ptr, value_len, &value_len); \
        a[1].b.size = name_len * 1; \
        a[2].b.size = value_len * 1; \
        return r; \
      } \
      case ICredentials_OP_getValueByName: { \
        if (k != ObjectCounts_pack(1, 1, 0, 0)) { \
          break; \
        } \
        const void *name_ptr = (const void*) a[0].b.ptr; \
        size_t name_len = a[0].b.size / 1; \
        void *value_ptr = (void*) a[1].b.ptr; \
        size_t value_len = a[1].b.size / 1; \
        int32_t r = prefix##getValueByName(me, name_ptr, name_len, value_ptr, value_len, &value_len); \
        a[1].b.size = value_len * 1; \
        return r; \
      } \
    } \
    return Object_ERROR_INVALID; \
  }


